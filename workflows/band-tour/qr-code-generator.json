{
  "name": "Band Tour - QR Code Generator",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "generate-qr",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "// Define the data for the QR code\nconst data = $input.item.json;\n\n// Generate a descriptive filename\nlet filename = `wyatt-olney-${data.type}-${data.venue || 'general'}`;\nfilename = filename.toLowerCase().replace(/\\s+/g, '-');\n\n// Create the QR code URL\nconst qrCodeUrl = `https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=${encodeURIComponent(data.url)}`;\n\n// Return the QR code URL and metadata\nreturn {\n  qrCodeUrl,\n  filename: `${filename}.png`,\n  type: data.type,\n  venue: data.venue || 'General',\n  url: data.url,\n  description: data.description || 'Wyatt Olney & The Wreckage',\n  createdAt: new Date().toISOString()\n};"
      },
      "name": "Generate QR Code",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        700,
        300
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.qrCodeUrl }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "data"
            }
          }
        }
      },
      "name": "Download QR Code",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        940,
        300
      ]
    },
    {
      "parameters": {
        "operation": "execute",
        "query": "MERGE (q:QRCode {url: $url})\nON CREATE SET q.type = $type, q.venue = $venue, q.description = $description, q.filename = $filename, q.createdAt = $createdAt\nON MATCH SET q.type = $type, q.venue = $venue, q.description = $description, q.filename = $filename, q.createdAt = $createdAt\nRETURN q",
        "parameters": "={{ $json }}"
      },
      "name": "Neo4j",
      "type": "n8n-nodes-base.neo4j",
      "typeVersion": 1,
      "position": [
        1180,
        300
      ],
      "credentials": {
        "neo4j": {
          "id": "1",
          "name": "Neo4j account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\"success\": true, \"message\": \"QR code generated successfully\", \"qrCodeUrl\": $json.qrCodeUrl, \"type\": $json.type, \"venue\": $json.venue, \"description\": $json.description} }}",
        "options": {}
      },
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1420,
        300
      ]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Generate QR Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate QR Code": {
      "main": [
        [
          {
            "node": "Download QR Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download QR Code": {
      "main": [
        [
          {
            "node": "Neo4j",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Neo4j": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}
