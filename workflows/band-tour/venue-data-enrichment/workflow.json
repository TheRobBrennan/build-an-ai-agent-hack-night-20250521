{
  "name": "Band Tour - Venue Data Enrichment",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "enrich-venue",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "operation": "execute",
        "query": "MATCH (v:Venue {name: $venueName, city: $city, state: $state}) RETURN v",
        "parameters": "={{ {venueName: $json.venueName, city: $json.city, state: $json.state} }}"
      },
      "name": "Get Venue Data",
      "type": "n8n-nodes-base.neo4j",
      "typeVersion": 1,
      "position": [
        680,
        300
      ],
      "credentials": {
        "neo4j": {
          "id": "1",
          "name": "Neo4j account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.records.length }}",
              "operation": "equal",
              "value2": "0"
            }
          ]
        }
      },
      "name": "Venue Exists?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        900,
        300
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\"success\": false, \"message\": \"Venue not found. Please run venue-research workflow first.\"} }}",
        "options": {}
      },
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1120,
        200
      ]
    },
    {
      "parameters": {
        "url": "=https://en.wikipedia.org/w/api.php?action=query&format=json&prop=extracts&exintro=true&redirects=true&titles={{ $json.records[0].v.properties.name }}%20{{ $json.records[0].v.properties.city }}%20{{ $json.records[0].v.properties.state }}"
      },
      "name": "Wikipedia Info",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1120,
        400
      ]
    },
    {
      "parameters": {
        "url": "=https://nominatim.openstreetmap.org/search?q={{ $json.records[0].v.properties.name }}%20{{ $json.records[0].v.properties.address }}%20{{ $json.records[0].v.properties.city }}%20{{ $json.records[0].v.properties.state }}&format=json&limit=1",
        "options": {
          "headers": {
            "parameters": [
              {
                "name": "User-Agent",
                "value": "WOATW Tour Management System"
              }
            ]
          }
        }
      },
      "name": "OpenStreetMap Geocoding",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1340,
        400
      ]
    },
    {
      "parameters": {
        "url": "=https://nominatim.openstreetmap.org/reverse?lat={{ $json[0].lat }}&lon={{ $json[0].lon }}&format=json&zoom=16&addressdetails=1",
        "options": {
          "headers": {
            "parameters": [
              {
                "name": "User-Agent",
                "value": "WOATW Tour Management System"
              }
            ]
          }
        }
      },
      "name": "Venue Area Details",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1560,
        400
      ]
    },
    {
      "parameters": {
        "url": "=https://nominatim.openstreetmap.org/search?q=parking%20near%20{{ $json.records[0].v.properties.address }}%20{{ $json.records[0].v.properties.city }}%20{{ $json.records[0].v.properties.state }}&format=json&limit=5",
        "options": {
          "headers": {
            "parameters": [
              {
                "name": "User-Agent",
                "value": "WOATW Tour Management System"
              }
            ]
          }
        }
      },
      "name": "Nearby Parking",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1780,
        400
      ]
    },
    {
      "parameters": {
        "url": "=https://nominatim.openstreetmap.org/search?q=hotels%20near%20{{ $json.records[0].v.properties.address }}%20{{ $json.records[0].v.properties.city }}%20{{ $json.records[0].v.properties.state }}&format=json&limit=5",
        "options": {
          "headers": {
            "parameters": [
              {
                "name": "User-Agent",
                "value": "WOATW Tour Management System"
              }
            ]
          }
        }
      },
      "name": "Nearby Hotels",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        2000,
        400
      ]
    },
    {
      "parameters": {
        "url": "=https://nominatim.openstreetmap.org/search?q=restaurants%20near%20{{ $json.records[0].v.properties.address }}%20{{ $json.records[0].v.properties.city }}%20{{ $json.records[0].v.properties.state }}&format=json&limit=5",
        "options": {
          "headers": {
            "parameters": [
              {
                "name": "User-Agent",
                "value": "WOATW Tour Management System"
              }
            ]
          }
        }
      },
      "name": "Nearby Restaurants",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        2220,
        400
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "venueName",
              "value": "={{ $json.records[0].v.properties.name }}"
            },
            {
              "name": "city",
              "value": "={{ $json.records[0].v.properties.city }}"
            },
            {
              "name": "state",
              "value": "={{ $json.records[0].v.properties.state }}"
            },
            {
              "name": "wikipediaInfo",
              "value": "={{ $json.query && $json.query.pages ? Object.values($json.query.pages)[0].extract || 'No Wikipedia information found' : 'No Wikipedia information found' }}"
            },
            {
              "name": "areaDetails",
              "value": "={{ $json.address ? $json.address : 'No area details found' }}"
            },
            {
              "name": "nearbyParking",
              "value": "={{ $json.map(place => ({ name: place.display_name.split(',')[0], distance: place.importance, address: place.display_name })) }}"
            },
            {
              "name": "nearbyHotels",
              "value": "={{ $json.map(place => ({ name: place.display_name.split(',')[0], distance: place.importance, address: place.display_name })) }}"
            },
            {
              "name": "nearbyRestaurants",
              "value": "={{ $json.map(place => ({ name: place.display_name.split(',')[0], distance: place.importance, address: place.display_name })) }}"
            },
            {
              "name": "localTime",
              "value": "={{ new Date().toLocaleString('en-US', { timeZone: 'America/New_York' }) }}"
            },
            {
              "name": "lastUpdated",
              "value": "={{ new Date().toISOString() }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Process Enriched Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        2440,
        400
      ]
    },
    {
      "parameters": {
        "operation": "execute",
        "query": "MATCH (v:Venue {name: $venueName, city: $city, state: $state})\nSET v.wikipediaInfo = $wikipediaInfo,\n    v.areaDetails = $areaDetails,\n    v.nearbyParking = $nearbyParking,\n    v.nearbyHotels = $nearbyHotels,\n    v.nearbyRestaurants = $nearbyRestaurants,\n    v.localTime = $localTime,\n    v.lastUpdated = $lastUpdated,\n    v.lastEnriched = datetime()\nRETURN v",
        "parameters": "={{ $json }}"
      },
      "name": "Update Venue in Neo4j",
      "type": "n8n-nodes-base.neo4j",
      "typeVersion": 1,
      "position": [
        2660,
        400
      ],
      "credentials": {
        "neo4j": {
          "id": "1",
          "name": "Neo4j account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\"success\": true, \"message\": \"Venue data enriched successfully\", \"data\": $json} }}",
        "options": {}
      },
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        2880,
        400
      ]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Get Venue Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Venue Data": {
      "main": [
        [
          {
            "node": "Venue Exists?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Venue Exists?": {
      "main": [
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wikipedia Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wikipedia Info": {
      "main": [
        [
          {
            "node": "OpenStreetMap Geocoding",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenStreetMap Geocoding": {
      "main": [
        [
          {
            "node": "Venue Area Details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Venue Area Details": {
      "main": [
        [
          {
            "node": "Nearby Parking",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Nearby Parking": {
      "main": [
        [
          {
            "node": "Nearby Hotels",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Nearby Hotels": {
      "main": [
        [
          {
            "node": "Nearby Restaurants",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Nearby Restaurants": {
      "main": [
        [
          {
            "node": "Process Enriched Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Enriched Data": {
      "main": [
        [
          {
            "node": "Update Venue in Neo4j",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Venue in Neo4j": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}
